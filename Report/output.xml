<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.4 (Python 3.6.5 on darwin)" generated="20180910 15:06:05.994">
<suite id="s1" name="App Test" source="/Users/sergio/Documents/testing_task/web_tests/app_test.robot">
<test id="s1-t1" name="Testing the purchasing service functionality">
<kw name="Setup connections" library="common" type="setup">
<doc>Setup steps for preparation database and REST API connections to work</doc>
<kw name="Make Connection" library="RESTRequestLibrary">
<doc>The method creates a 'connection' - a class instance under the alias alias key in</doc>
<arguments>
<arg>${CONNECTION_NAME}</arg>
<arg>${APP_URL}</arg>
</arguments>
<status status="PASS" starttime="20180910 15:06:06.145" endtime="20180910 15:06:06.146"></status>
</kw>
<kw name="Connect To The Database" library="DataBaseLibrary">
<doc>The method creates a connection to the  sqlite database file.</doc>
<arguments>
<arg>${DB_FILE_NAME}</arg>
</arguments>
<status status="PASS" starttime="20180910 15:06:06.146" endtime="20180910 15:06:06.147"></status>
</kw>
<status status="PASS" starttime="20180910 15:06:06.145" endtime="20180910 15:06:06.147"></status>
</kw>
<kw name="Get Id And Balance Of Client With Positive Balance" library="DataBaseLibrary">
<doc>The method returns ID and balance value of the client with positive balance. If client with positive</doc>
<assign>
<var>${client_id}</var>
<var>${start_balance}</var>
</assign>
<msg timestamp="20180910 15:06:06.148" level="INFO">${client_id} = 3</msg>
<msg timestamp="20180910 15:06:06.148" level="INFO">${start_balance} = 3.5</msg>
<status status="PASS" starttime="20180910 15:06:06.147" endtime="20180910 15:06:06.148"></status>
</kw>
<kw name="Get the client subscribed services" library="api">
<doc>GET-request implementation which returns a list of purchases services</doc>
<arguments>
<arg>${client_id}</arg>
</arguments>
<assign>
<var>${subscribed_services}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>client_id=${client_id}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20180910 15:06:06.150" level="INFO">${data} = {'client_id': 3}</msg>
<status status="PASS" starttime="20180910 15:06:06.149" endtime="20180910 15:06:06.150"></status>
</kw>
<kw name="Post Request" library="RESTRequestLibrary">
<doc>POST-method implementation. Uses server URL and headers (by default) stored in connection named 'alias'</doc>
<arguments>
<arg>${connection_name}</arg>
<arg>${purchased_services_url_tail}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180910 15:06:06.167" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20180910 15:06:06.150" endtime="20180910 15:06:06.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
<arg>${RESPONSE_ERROR_MSG} Status code: ${response.status_code}</arg>
</arguments>
<msg timestamp="20180910 15:06:06.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20180910 15:06:06.167" endtime="20180910 15:06:06.168"></status>
</kw>
<msg timestamp="20180910 15:06:06.168" level="INFO">${subscribed_services} = [{'cost': 1.2, 'id': 1, 'name': 'Service #1'}]</msg>
<status status="PASS" starttime="20180910 15:06:06.148" endtime="20180910 15:06:06.168"></status>
</kw>
<kw name="Get service list" library="api">
<doc>GET-request implementation which return a list of available services</doc>
<assign>
<var>${available_services}</var>
</assign>
<kw name="Get Request" library="RESTRequestLibrary">
<doc>GET-method implementation. Uses server URL and headers (by default) stored in connection named 'alias'</doc>
<arguments>
<arg>${connection_name}</arg>
<arg>${all_servises_tail}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180910 15:06:06.175" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20180910 15:06:06.169" endtime="20180910 15:06:06.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>200</arg>
<arg>${RESPONSE_ERROR_MSG} Status code: ${response.status_code}</arg>
</arguments>
<msg timestamp="20180910 15:06:06.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20180910 15:06:06.175" endtime="20180910 15:06:06.175"></status>
</kw>
<msg timestamp="20180910 15:06:06.176" level="INFO">${available_services} = [{'cost': 1.2, 'id': 1, 'name': 'Service #1'}, {'cost': 0.35, 'id': 2, 'name': 'Service #2'}, {'cost': 0.15, 'id': 3, 'name': 'Service #3'}, {'cost': 0.15, 'id': 4, 'name': 'Service #4'}, {'cost': 0.0...</msg>
<status status="PASS" starttime="20180910 15:06:06.169" endtime="20180910 15:06:06.176"></status>
</kw>
<kw name="Get Non Purchased Service Id And Price" library="ParseDataLibrary">
<doc>The method gets a list of services which are available to purchase and don't exist in</doc>
<arguments>
<arg>${subscribed_services}</arg>
<arg>${available_services}</arg>
</arguments>
<assign>
<var>${service_id}</var>
<var>${service_price}</var>
</assign>
<msg timestamp="20180910 15:06:06.176" level="INFO">${service_id} = 2</msg>
<msg timestamp="20180910 15:06:06.176" level="INFO">${service_price} = 0.35</msg>
<status status="PASS" starttime="20180910 15:06:06.176" endtime="20180910 15:06:06.176"></status>
</kw>
<kw name="Add service to client account" library="api">
<doc>POST-request implementation which adds specific service to the client's purchased service list</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${service_id}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>client_id=${client_id}</arg>
<arg>service_id=${service_id}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20180910 15:06:06.177" level="INFO">${data} = {'client_id': 3, 'service_id': 2}</msg>
<status status="PASS" starttime="20180910 15:06:06.177" endtime="20180910 15:06:06.177"></status>
</kw>
<kw name="Post Request" library="RESTRequestLibrary">
<doc>POST-method implementation. Uses server URL and headers (by default) stored in connection named 'alias'</doc>
<arguments>
<arg>${connection_name}</arg>
<arg>${ADD_SERVICE_TAIL}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20180910 15:06:06.196" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20180910 15:06:06.177" endtime="20180910 15:06:06.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${response.status_code}</arg>
<arg>202</arg>
<arg>${RESPONSE_ERROR_MSG} Status code: ${response.status_code}</arg>
</arguments>
<msg timestamp="20180910 15:06:06.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20180910 15:06:06.196" endtime="20180910 15:06:06.196"></status>
</kw>
<status status="PASS" starttime="20180910 15:06:06.176" endtime="20180910 15:06:06.196"></status>
</kw>
<kw name="Verify the service is purchased" library="api">
<doc>Verify if the specified service exists in the client's purcahsed service list</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${service_id}</arg>
</arguments>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>client_id=${client_id}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20180910 15:06:06.198" level="INFO">${data} = {'client_id': 3}</msg>
<status status="PASS" starttime="20180910 15:06:06.197" endtime="20180910 15:06:06.198"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>1 min</arg>
<arg>1 sec</arg>
<arg>Check if response contains service</arg>
<arg>${connection_name}</arg>
<arg>${PURCHASED_SERVICES_URL_TAIL}</arg>
<arg>${data}</arg>
<arg>${service_id}</arg>
</arguments>
<kw name="Check If Response Contains Service" library="RESTRequestLibrary">
<doc>The method provides the functionality of checking the POST-request answer if it contains</doc>
<arguments>
<arg>${connection_name}</arg>
<arg>${PURCHASED_SERVICES_URL_TAIL}</arg>
<arg>${data}</arg>
<arg>${service_id}</arg>
</arguments>
<status status="PASS" starttime="20180910 15:06:06.198" endtime="20180910 15:06:06.207"></status>
</kw>
<status status="PASS" starttime="20180910 15:06:06.198" endtime="20180910 15:06:06.207"></status>
</kw>
<status status="PASS" starttime="20180910 15:06:06.197" endtime="20180910 15:06:06.207"></status>
</kw>
<kw name="Get The Client Balance" library="DataBaseLibrary">
<doc>The method returns balance value of the client with specific ID. Raises Lookup error if the wanted entry</doc>
<arguments>
<arg>${client_id}</arg>
</arguments>
<assign>
<var>${current_balance}</var>
</assign>
<msg timestamp="20180910 15:06:06.207" level="INFO">${current_balance} = 3.5</msg>
<status status="PASS" starttime="20180910 15:06:06.207" endtime="20180910 15:06:06.207"></status>
</kw>
<kw name="Check the balance changing" library="common">
<doc>Verifying if the balance value changed after the service purchase.</doc>
<arguments>
<arg>${start_balance}</arg>
<arg>${current_balance}</arg>
<arg>${service_price}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${start_balance}-${service_cost}</arg>
</arguments>
<assign>
<var>${estimated_balance}</var>
</assign>
<msg timestamp="20180910 15:06:06.208" level="INFO">${estimated_balance} = 3.15</msg>
<status status="PASS" starttime="20180910 15:06:06.208" endtime="20180910 15:06:06.208"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${estimated_balance}</arg>
<arg>${end_balance}</arg>
<arg>The current client balance doesn't match estimated balance.</arg>
</arguments>
<msg timestamp="20180910 15:06:06.209" level="FAIL">The current client balance doesn't match estimated balance.: 3.15 != 3.5</msg>
<status status="FAIL" starttime="20180910 15:06:06.208" endtime="20180910 15:06:06.209"></status>
</kw>
<status status="FAIL" starttime="20180910 15:06:06.208" endtime="20180910 15:06:06.209"></status>
</kw>
<kw name="Close connections" library="common" type="teardown">
<doc>Teardown steps</doc>
<kw name="Close Database Connection" library="DataBaseLibrary">
<doc>Teardown method which closes opened connection to database.</doc>
<status status="PASS" starttime="20180910 15:06:06.209" endtime="20180910 15:06:06.210"></status>
</kw>
<kw name="Delete All Connections" library="RESTRequestLibrary">
<doc>The method reinitializes RESTRequestLibrary.connections with empty dictionary.</doc>
<status status="PASS" starttime="20180910 15:06:06.210" endtime="20180910 15:06:06.210"></status>
</kw>
<status status="PASS" starttime="20180910 15:06:06.209" endtime="20180910 15:06:06.210"></status>
</kw>
<status status="FAIL" starttime="20180910 15:06:06.145" endtime="20180910 15:06:06.210" critical="yes">The current client balance doesn't match estimated balance.: 3.15 != 3.5</status>
</test>
<doc>Test task implementation</doc>
<status status="FAIL" starttime="20180910 15:06:05.995" endtime="20180910 15:06:06.210"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" id="s1" name="App Test">App Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
